From e20e4f022f564aa0fddebfc2e4d893b1997d5058 Mon Sep 17 00:00:00 2001
From: Augusto Righetto <aurighet@microsoft.com>
Date: Mon, 23 Dec 2019 11:16:41 -0800
Subject: [PATCH] This is a change that fixes 3 issues in the rtc_base build
 for UWPs:
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

1. WebRTC for UWP should fall back to the standard task queue instead of the task queue using Win32 APIs. task_queue_win.cc consumes unsupported UWP APIs like PeekMessage and PostThreadMessage. It is possible to have an native task queue using supported UWP APIs, but it would only be necessary if the performance of the standard one is inadequate.
2. Similarly, win32_window.cc also uses Win32 only APIs for creating and managing old style windows, like CreateWindowEx. CoreWindow and CoreMessaging should be used instead of the Win32 windowing APIs. All code depending on win32_window (like unit tests, peer_connection_client and crashpad) must be unavailable on the UWP build.
3. win32_socket_server_unittest is a fallout of item #2 and itâ€™s being left out of the UWP build for consuming win32_window.
---
 rtc_base/BUILD.gn | 24 +++++++++++++++++++-----
 1 file changed, 19 insertions(+), 5 deletions(-)

diff --git a/rtc_base/BUILD.gn b/rtc_base/BUILD.gn
index 9ff86ddb39..95baec9170 100644
--- a/rtc_base/BUILD.gn
+++ b/rtc_base/BUILD.gn
@@ -523,10 +523,17 @@ if (is_mac || is_ios) {
 if (is_win) {
   rtc_library("rtc_task_queue_win") {
     visibility = [ "../api/task_queue:default_task_queue_factory" ]
-    sources = [
-      "task_queue_win.cc",
-      "task_queue_win.h",
-    ]
+    if (current_os != "winuwp") {
+      sources = [
+        "task_queue_win.cc",
+        "task_queue_win.h",
+      ]
+    } else {
+      sources = [
+        "task_queue_stdlib.cc",
+        "task_queue_stdlib.h",
+      ]
+    }
     deps = [
       ":checks",
       ":criticalsection",
@@ -986,6 +993,13 @@ rtc_library("rtc_base") {
       "win32_window.h",
     ]
 
+    if (current_os == "winuwp") {
+      sources -= [
+        "win32_window.cc",
+        "win32_window.h",
+      ]
+    }
+
     libs += [
       "crypt32.lib",
       "iphlpapi.lib",
@@ -1159,7 +1173,7 @@ if (rtc_include_tests) {
       "//testing/gtest",
       "//third_party/abseil-cpp/absl/memory",
     ]
-    if (is_win) {
+    if ((is_win) && (current_os != "winuwp")) {
       sources += [ "win32_socket_server_unittest.cc" ]
     }
   }
-- 
2.24.1.windows.2

